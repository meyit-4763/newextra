import asyncio

from pyrogram import enums, filters
from pyrogram.errors import FloodWait
from YukkiMusic import app


@app.on_message(filters.command("bots") & filters.group)
async def bots(client, message):
    try:
        botList = []  # BotlarÄ±n listesini tutmak iÃ§in boÅŸ bir liste oluÅŸtur
        async for bot in app.get_chat_members(
            message.chat.id, filter=enums.ChatMembersFilter.BOTS
        ):
            botList.append(bot.user)  # BotlarÄ± listeye ekle
        lenBotList = len(botList)  # Bot sayÄ±sÄ±nÄ± al
        text3 = f"**Bot Listesi - {message.chat.title}**\n\nğŸ¤– Botlar\n"
        while len(botList) > 1:  # Liste 1'den fazla bot iÃ§eriyorsa
            bot = botList.pop(0)  # Ä°lk botu Ã§Ä±kar
            text3 += f"â”œ @{bot.username}\n"  # Botun kullanÄ±cÄ± adÄ±nÄ± ekle
        else:  # Liste 1 bot iÃ§eriyorsa
            bot = botList.pop(0)  # Son botu Ã§Ä±kar
            text3 += f"â”” @{bot.username}\n\n"  # Botun kullanÄ±cÄ± adÄ±nÄ± ekle
            text3 += f"**Toplam Bot SayÄ±sÄ±**: {lenBotList}**"  # Toplam bot sayÄ±sÄ±nÄ± ekle
            await app.send_message(message.chat.id, text3)  # MesajÄ± gÃ¶nder
    except FloodWait as e:  # FloodWait hatasÄ± alÄ±rsak
        await asyncio.sleep(e.value)  # Belirtilen sÃ¼re kadar bekle


__MODULE__ = "Botlar"  # ModÃ¼l adÄ±
__HELP__ = """
**Botlar**

â€¢ /bots - Grubun iÃ§indeki botlarÄ±n listesini al.
"""